// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DB.proto

#include "DB.pb.h"

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>

#include <algorithm>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_DB_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_InsertResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_QuerySample;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_Tag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_InsertSample;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_Tags;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<2>
        scc_info_QueryGroupSample;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DB_2eproto ::google::protobuf::
    internal::SCCInfo<3>
        scc_info_QueryResult;
}  // namespace protobuf_DB_2eproto
class TagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tag> _instance;
} _Tag_default_instance_;
class TagsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tags> _instance;
} _Tags_default_instance_;
class InsertSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertSample> _instance;
} _InsertSample_default_instance_;
class InsertSamplesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertSamples> _instance;
} _InsertSamples_default_instance_;
class InsertResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertResult> _instance;
} _InsertResult_default_instance_;
class InsertResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertResults> _instance;
} _InsertResults_default_instance_;
class QueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryRequest> _instance;
} _QueryRequest_default_instance_;
class QuerySampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuerySample> _instance;
} _QuerySample_default_instance_;
class QueryGroupSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryGroupSample>
      _instance;
} _QueryGroupSample_default_instance_;
class QueryResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResult> _instance;
} _QueryResult_default_instance_;
class QueryResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResults> _instance;
} _QueryResults_default_instance_;
namespace protobuf_DB_2eproto {
static void InitDefaultsTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Tag_default_instance_;
    new (ptr)::Tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tag = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsTag},
    {}};

static void InitDefaultsTags() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Tags_default_instance_;
    new (ptr)::Tags();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tags::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Tags = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsTags},
    {
        &protobuf_DB_2eproto::scc_info_Tag.base,
    }};

static void InitDefaultsInsertSample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InsertSample_default_instance_;
    new (ptr)::InsertSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InsertSample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InsertSample = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsInsertSample},
    {
        &protobuf_DB_2eproto::scc_info_Tags.base,
    }};

static void InitDefaultsInsertSamples() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InsertSamples_default_instance_;
    new (ptr)::InsertSamples();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InsertSamples::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InsertSamples = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsInsertSamples},
    {
        &protobuf_DB_2eproto::scc_info_InsertSample.base,
    }};

static void InitDefaultsInsertResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InsertResult_default_instance_;
    new (ptr)::InsertResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InsertResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InsertResult = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsInsertResult},
    {}};

static void InitDefaultsInsertResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_InsertResults_default_instance_;
    new (ptr)::InsertResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InsertResults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InsertResults = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsInsertResults},
    {
        &protobuf_DB_2eproto::scc_info_InsertResult.base,
    }};

static void InitDefaultsQueryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueryRequest_default_instance_;
    new (ptr)::QueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsQueryRequest},
    {
        &protobuf_DB_2eproto::scc_info_Tags.base,
    }};

static void InitDefaultsQuerySample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QuerySample_default_instance_;
    new (ptr)::QuerySample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QuerySample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuerySample = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsQuerySample},
    {}};

static void InitDefaultsQueryGroupSample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueryGroupSample_default_instance_;
    new (ptr)::QueryGroupSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryGroupSample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_QueryGroupSample = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     2, InitDefaultsQueryGroupSample},
    {
        &protobuf_DB_2eproto::scc_info_Tags.base,
        &protobuf_DB_2eproto::scc_info_QuerySample.base,
    }};

static void InitDefaultsQueryResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueryResult_default_instance_;
    new (ptr)::QueryResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_QueryResult = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     3, InitDefaultsQueryResult},
    {
        &protobuf_DB_2eproto::scc_info_Tags.base,
        &protobuf_DB_2eproto::scc_info_QuerySample.base,
        &protobuf_DB_2eproto::scc_info_QueryGroupSample.base,
    }};

static void InitDefaultsQueryResults() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueryResults_default_instance_;
    new (ptr)::QueryResults();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryResults::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResults = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsQueryResults},
    {
        &protobuf_DB_2eproto::scc_info_QueryResult.base,
    }};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Tag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tags.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertSample.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertSamples.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InsertResults.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuerySample.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryGroupSample.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResults.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Tag,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Tag, name_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Tag, value_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Tags,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Tags, tags_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, type_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, id_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, slots_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, lset_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, lsets_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, t_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSample, v_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSamples,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertSamples,
                                                       samples_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertResult,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertResult, id_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertResult, slots_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertResults,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InsertResults,
                                                       results_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest,
                                                       return_metric_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, lset_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, mint_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryRequest, maxt_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QuerySample,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QuerySample, t_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QuerySample, v_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryGroupSample,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryGroupSample,
                                                       metric_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryGroupSample,
                                                       values_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResult,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResult, metric_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResult, id_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResult, values_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResult, series_),
        ~0u,  // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResults,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryResults,
                                                       results_),
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, sizeof(::Tag)},
        {7, -1, sizeof(::Tags)},
        {13, -1, sizeof(::InsertSample)},
        {25, -1, sizeof(::InsertSamples)},
        {31, -1, sizeof(::InsertResult)},
        {38, -1, sizeof(::InsertResults)},
        {44, -1, sizeof(::QueryRequest)},
        {53, -1, sizeof(::QuerySample)},
        {60, -1, sizeof(::QueryGroupSample)},
        {67, -1, sizeof(::QueryResult)},
        {76, -1, sizeof(::QueryResults)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_Tag_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_Tags_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_InsertSample_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_InsertSamples_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_InsertResult_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_InsertResults_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_QueryRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_QuerySample_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_QueryGroupSample_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_QueryResult_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::_QueryResults_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors("DB.proto", schemas, file_default_instances,
                    TableStruct::offsets, file_level_metadata,
                    file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&)
    GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
      protodesc_cold) = {
      "\n\010DB.proto\"\"\n\003Tag\022\014\n\004name\030\001 "
      "\001(\014\022\r\n\005value"
      "\030\002 \001(\014\"\032\n\004Tags\022\022\n\004tags\030\001 "
      "\003(\0132\004.Tag\"\263\001\n\014I"
      "nsertSample\022&\n\004type\030\001 \001(\0162\030.InsertSample"
      ".InsertType\022\n\n\002id\030\002 \001(\004\022\r\n\005slots\030\003 "
      "\003(\r\022\023"
      "\n\004lset\030\004 \001(\0132\005.Tags\022\024\n\005lsets\030\005 "
      "\003(\0132\005.Tag"
      "s\022\t\n\001t\030\006 \001(\003\022\t\n\001v\030\007 "
      "\003(\001\"\037\n\nInsertType\022\006\n"
      "\002TS\020\000\022\t\n\005GROUP\020\001\"/"
      "\n\rInsertSamples\022\036\n\007sam"
      "ples\030\001 \003(\0132\r.InsertSample\")\n\014InsertResul"
      "t\022\n\n\002id\030\001 \001(\004\022\r\n\005slots\030\002 "
      "\003(\r\"/\n\rInsertRe"
      "sults\022\036\n\007results\030\001 \003(\0132\r.InsertResult\"V\n"
      "\014QueryRequest\022\025\n\rreturn_metric\030\001 "
      "\001(\010\022\023\n\004"
      "lset\030\002 \001(\0132\005.Tags\022\014\n\004mint\030\003 "
      "\001(\003\022\014\n\004maxt\030"
      "\004 \001(\003\"#\n\013QuerySample\022\t\n\001t\030\001 "
      "\001(\003\022\t\n\001v\030\002 \001"
      "(\001\"G\n\020QueryGroupSample\022\025\n\006metric\030\001 "
      "\001(\0132\005"
      ".Tags\022\034\n\006values\030\002 \003(\0132\014.QuerySample\"q\n\013Q"
      "ueryResult\022\025\n\006metric\030\001 "
      "\001(\0132\005.Tags\022\n\n\002id\030"
      "\002 \001(\004\022\034\n\006values\030\003 "
      "\003(\0132\014.QuerySample\022!\n\006s"
      "eries\030\004 \003(\0132\021.QueryGroupSample\"-\n\014QueryR"
      "esults\022\035\n\007results\030\001 \003(\0132\014.QueryResultb\006p"
      "roto3"};
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 765);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "DB.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
}  // namespace protobuf_DB_2eproto
const ::google::protobuf::EnumDescriptor* InsertSample_InsertType_descriptor() {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_2eproto::file_level_enum_descriptors[0];
}
bool InsertSample_InsertType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InsertSample_InsertType InsertSample::TS;
const InsertSample_InsertType InsertSample::GROUP;
const InsertSample_InsertType InsertSample::InsertType_MIN;
const InsertSample_InsertType InsertSample::InsertType_MAX;
const int InsertSample::InsertType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Tag::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tag::kNameFieldNumber;
const int Tag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tag::Tag() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_Tag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tag)
}
Tag::Tag(const Tag& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
  value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Tag)
}

void Tag::SharedCtor() {
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:Tag)
  SharedDtor();
}

void Tag::SharedDtor() {
  name_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tag::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Tag::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Tag& Tag::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_Tag.base);
  return *internal_default_instance();
}

void Tag::Clear() {
  // @@protoc_insertion_point(message_clear_start:Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
              input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
              input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tag)
  return false;
#undef DO_
}

void Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        1, this->name(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:Tag)
}

::google::protobuf::uint8* Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tag)
  return target;
}

size_t Tag::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:Tag)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                          this->name());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                          this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tag::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tag>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:Tag)
    MergeFrom(*source);
  }
}

void Tag::MergeFrom(const Tag& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.name().size() > 0) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
  if (from.value().size() > 0) {
    value_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.value_);
  }
}

void Tag::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const { return true; }

void Tag::Swap(Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tag::InternalSwap(Tag* other) {
  using std::swap;
  name_.Swap(&other->name_,
             &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
             GetArenaNoVirtual());
  value_.Swap(&other->value_,
              &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
              GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tag::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void Tags::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tags::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tags::Tags() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_Tags.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tags)
}
Tags::Tags(const Tags& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tags)
}

void Tags::SharedCtor() {}

Tags::~Tags() {
  // @@protoc_insertion_point(destructor:Tags)
  SharedDtor();
}

void Tags::SharedDtor() {}

void Tags::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Tags::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Tags& Tags::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_Tags.base);
  return *internal_default_instance();
}

void Tags::Clear() {
  // @@protoc_insertion_point(message_clear_start:Tags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  tags_.Clear();
  _internal_metadata_.Clear();
}

bool Tags::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Tags)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Tag tags = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Tags)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Tags)
  return false;
#undef DO_
}

void Tags::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Tags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Tag tags = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->tags_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->tags(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:Tags)
}

::google::protobuf::uint8* Tags::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Tags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Tag tags = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->tags_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->tags(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tags)
  return target;
}

size_t Tags::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:Tags)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .Tag tags = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tags::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:Tags)
  GOOGLE_DCHECK_NE(&from, this);
  const Tags* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tags>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tags)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:Tags)
    MergeFrom(*source);
  }
}

void Tags::MergeFrom(const Tags& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:Tags)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  tags_.MergeFrom(from.tags_);
}

void Tags::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:Tags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tags::CopyFrom(const Tags& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:Tags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tags::IsInitialized() const { return true; }

void Tags::Swap(Tags* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tags::InternalSwap(Tags* other) {
  using std::swap;
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tags::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void InsertSample::InitAsDefaultInstance() {
  ::_InsertSample_default_instance_._instance.get_mutable()->lset_ =
      const_cast<::Tags*>(::Tags::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertSample::kTypeFieldNumber;
const int InsertSample::kIdFieldNumber;
const int InsertSample::kSlotsFieldNumber;
const int InsertSample::kLsetFieldNumber;
const int InsertSample::kLsetsFieldNumber;
const int InsertSample::kTFieldNumber;
const int InsertSample::kVFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertSample::InsertSample()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertSample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InsertSample)
}
InsertSample::InsertSample(const InsertSample& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slots_(from.slots_),
      lsets_(from.lsets_),
      v_(from.v_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lset()) {
    lset_ = new ::Tags(*from.lset_);
  } else {
    lset_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
           static_cast<size_t>(reinterpret_cast<char*>(&type_) -
                               reinterpret_cast<char*>(&id_)) +
               sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:InsertSample)
}

void InsertSample::SharedCtor() {
  ::memset(&lset_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&type_) -
                               reinterpret_cast<char*>(&lset_)) +
               sizeof(type_));
}

InsertSample::~InsertSample() {
  // @@protoc_insertion_point(destructor:InsertSample)
  SharedDtor();
}

void InsertSample::SharedDtor() {
  if (this != internal_default_instance()) delete lset_;
}

void InsertSample::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* InsertSample::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const InsertSample& InsertSample::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertSample.base);
  return *internal_default_instance();
}

void InsertSample::Clear() {
  // @@protoc_insertion_point(message_clear_start:InsertSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  slots_.Clear();
  lsets_.Clear();
  v_.Clear();
  if (GetArenaNoVirtual() == NULL && lset_ != NULL) {
    delete lset_;
  }
  lset_ = NULL;
  ::memset(&id_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&type_) -
                               reinterpret_cast<char*>(&id_)) +
               sizeof(type_));
  _internal_metadata_.Clear();
}

bool InsertSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InsertSample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .InsertSample.InsertType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
              input, &value)));
          set_type(static_cast<::InsertSample_InsertType>(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 slots = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                  ::google::protobuf::uint32,
                  ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                  input, this->mutable_slots())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::
                   ReadRepeatedPrimitiveNoInline<
                       ::google::protobuf::uint32,
                       ::google::protobuf::internal::WireFormatLite::
                           TYPE_UINT32>(1, 26u, input, this->mutable_slots())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Tags lset = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_lset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Tags lsets = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_lsets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 t = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int64,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(input,
                                                                         &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double v = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                  double,
                  ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                  input, this->mutable_v())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       57u /* 57 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::
                   ReadRepeatedPrimitiveNoInline<
                       double, ::google::protobuf::internal::WireFormatLite::
                                   TYPE_DOUBLE>(1, 58u, input,
                                                this->mutable_v())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InsertSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InsertSample)
  return false;
#undef DO_
}

void InsertSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InsertSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .InsertSample.InsertType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(1, this->type(),
                                                            output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(),
                                                              output);
  }

  // repeated uint32 slots = 3;
  if (this->slots_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
        3,
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
        output);
    output->WriteVarint32(
        static_cast<::google::protobuf::uint32>(_slots_cached_byte_size_));
  }
  for (int i = 0, n = this->slots_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
        this->slots(i), output);
  }

  // .Tags lset = 4;
  if (this->has_lset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_lset(), output);
  }

  // repeated .Tags lsets = 5;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->lsets_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->lsets(static_cast<int>(i)), output);
  }

  // int64 t = 6;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->t(),
                                                             output);
  }

  // repeated double v = 7;
  if (this->v_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
        7,
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
        output);
    output->WriteVarint32(
        static_cast<::google::protobuf::uint32>(_v_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
        this->v().data(), this->v_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:InsertSample)
}

::google::protobuf::uint8*
InsertSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InsertSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .InsertSample.InsertType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
        1, this->type(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        2, this->id(), target);
  }

  // repeated uint32 slots = 3;
  if (this->slots_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
        3,
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
        target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast<::google::protobuf::int32>(_slots_cached_byte_size_),
        target);
    target =
        ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTagToArray(
            this->slots_, target);
  }

  // .Tags lset = 4;
  if (this->has_lset()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(4, this->_internal_lset(), deterministic,
                                    target);
  }

  // repeated .Tags lsets = 5;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->lsets_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(5, this->lsets(static_cast<int>(i)),
                                    deterministic, target);
  }

  // int64 t = 6;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(
        6, this->t(), target);
  }

  // repeated double v = 7;
  if (this->v_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
        7,
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
        target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast<::google::protobuf::int32>(_v_cached_byte_size_), target);
    target =
        ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTagToArray(
            this->v_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InsertSample)
  return target;
}

size_t InsertSample::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:InsertSample)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated uint32 slots = 3;
  {
    size_t data_size =
        ::google::protobuf::internal::WireFormatLite::UInt32Size(this->slots_);
    if (data_size > 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _slots_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Tags lsets = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->lsets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lsets(static_cast<int>(i)));
    }
  }

  // repeated double v = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->v_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _v_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .Tags lset = 4;
  if (this->has_lset()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*lset_);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->id());
  }

  // int64 t = 6;
  if (this->t() != 0) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->t());
  }

  // .InsertSample.InsertType type = 1;
  if (this->type() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(
                          this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertSample::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:InsertSample)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertSample>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:InsertSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:InsertSample)
    MergeFrom(*source);
  }
}

void InsertSample::MergeFrom(const InsertSample& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:InsertSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  slots_.MergeFrom(from.slots_);
  lsets_.MergeFrom(from.lsets_);
  v_.MergeFrom(from.v_);
  if (from.has_lset()) {
    mutable_lset()->::Tags::MergeFrom(from.lset());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.t() != 0) {
    set_t(from.t());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void InsertSample::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:InsertSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertSample::CopyFrom(const InsertSample& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:InsertSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertSample::IsInitialized() const { return true; }

void InsertSample::Swap(InsertSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertSample::InternalSwap(InsertSample* other) {
  using std::swap;
  slots_.InternalSwap(&other->slots_);
  CastToBase(&lsets_)->InternalSwap(CastToBase(&other->lsets_));
  v_.InternalSwap(&other->v_);
  swap(lset_, other->lset_);
  swap(id_, other->id_);
  swap(t_, other->t_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertSample::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void InsertSamples::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertSamples::kSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertSamples::InsertSamples()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertSamples.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InsertSamples)
}
InsertSamples::InsertSamples(const InsertSamples& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      samples_(from.samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:InsertSamples)
}

void InsertSamples::SharedCtor() {}

InsertSamples::~InsertSamples() {
  // @@protoc_insertion_point(destructor:InsertSamples)
  SharedDtor();
}

void InsertSamples::SharedDtor() {}

void InsertSamples::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* InsertSamples::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const InsertSamples& InsertSamples::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertSamples.base);
  return *internal_default_instance();
}

void InsertSamples::Clear() {
  // @@protoc_insertion_point(message_clear_start:InsertSamples)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  samples_.Clear();
  _internal_metadata_.Clear();
}

bool InsertSamples::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InsertSamples)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InsertSample samples = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InsertSamples)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InsertSamples)
  return false;
#undef DO_
}

void InsertSamples::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InsertSamples)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .InsertSample samples = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->samples_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->samples(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:InsertSamples)
}

::google::protobuf::uint8*
InsertSamples::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InsertSamples)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .InsertSample samples = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->samples_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->samples(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InsertSamples)
  return target;
}

size_t InsertSamples::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:InsertSamples)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .InsertSample samples = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->samples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->samples(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertSamples::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:InsertSamples)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertSamples* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertSamples>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:InsertSamples)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:InsertSamples)
    MergeFrom(*source);
  }
}

void InsertSamples::MergeFrom(const InsertSamples& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:InsertSamples)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  samples_.MergeFrom(from.samples_);
}

void InsertSamples::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:InsertSamples)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertSamples::CopyFrom(const InsertSamples& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:InsertSamples)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertSamples::IsInitialized() const { return true; }

void InsertSamples::Swap(InsertSamples* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertSamples::InternalSwap(InsertSamples* other) {
  using std::swap;
  CastToBase(&samples_)->InternalSwap(CastToBase(&other->samples_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertSamples::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void InsertResult::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertResult::kIdFieldNumber;
const int InsertResult::kSlotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertResult::InsertResult()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InsertResult)
}
InsertResult::InsertResult(const InsertResult& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slots_(from.slots_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:InsertResult)
}

void InsertResult::SharedCtor() { id_ = GOOGLE_ULONGLONG(0); }

InsertResult::~InsertResult() {
  // @@protoc_insertion_point(destructor:InsertResult)
  SharedDtor();
}

void InsertResult::SharedDtor() {}

void InsertResult::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* InsertResult::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const InsertResult& InsertResult::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertResult.base);
  return *internal_default_instance();
}

void InsertResult::Clear() {
  // @@protoc_insertion_point(message_clear_start:InsertResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  slots_.Clear();
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool InsertResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InsertResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 slots = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((
              ::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                  ::google::protobuf::uint32,
                  ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                  input, this->mutable_slots())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(
                       16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::
                   ReadRepeatedPrimitiveNoInline<
                       ::google::protobuf::uint32,
                       ::google::protobuf::internal::WireFormatLite::
                           TYPE_UINT32>(1, 18u, input, this->mutable_slots())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InsertResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InsertResult)
  return false;
#undef DO_
}

void InsertResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InsertResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(),
                                                              output);
  }

  // repeated uint32 slots = 2;
  if (this->slots_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
        2,
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
        output);
    output->WriteVarint32(
        static_cast<::google::protobuf::uint32>(_slots_cached_byte_size_));
  }
  for (int i = 0, n = this->slots_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
        this->slots(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:InsertResult)
}

::google::protobuf::uint8*
InsertResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InsertResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->id(), target);
  }

  // repeated uint32 slots = 2;
  if (this->slots_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
        2,
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
        target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast<::google::protobuf::int32>(_slots_cached_byte_size_),
        target);
    target =
        ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTagToArray(
            this->slots_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InsertResult)
  return target;
}

size_t InsertResult::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:InsertResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated uint32 slots = 2;
  {
    size_t data_size =
        ::google::protobuf::internal::WireFormatLite::UInt32Size(this->slots_);
    if (data_size > 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _slots_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertResult::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:InsertResult)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertResult>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:InsertResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:InsertResult)
    MergeFrom(*source);
  }
}

void InsertResult::MergeFrom(const InsertResult& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:InsertResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  slots_.MergeFrom(from.slots_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void InsertResult::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:InsertResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertResult::CopyFrom(const InsertResult& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:InsertResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertResult::IsInitialized() const { return true; }

void InsertResult::Swap(InsertResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertResult::InternalSwap(InsertResult* other) {
  using std::swap;
  slots_.InternalSwap(&other->slots_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertResult::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void InsertResults::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertResults::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertResults::InsertResults()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertResults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:InsertResults)
}
InsertResults::InsertResults(const InsertResults& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:InsertResults)
}

void InsertResults::SharedCtor() {}

InsertResults::~InsertResults() {
  // @@protoc_insertion_point(destructor:InsertResults)
  SharedDtor();
}

void InsertResults::SharedDtor() {}

void InsertResults::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* InsertResults::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const InsertResults& InsertResults::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_InsertResults.base);
  return *internal_default_instance();
}

void InsertResults::Clear() {
  // @@protoc_insertion_point(message_clear_start:InsertResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool InsertResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InsertResults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InsertResult results = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InsertResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InsertResults)
  return false;
#undef DO_
}

void InsertResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InsertResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .InsertResult results = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->results_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:InsertResults)
}

::google::protobuf::uint8*
InsertResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InsertResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .InsertResult results = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->results_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->results(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InsertResults)
  return target;
}

size_t InsertResults::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:InsertResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .InsertResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertResults::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:InsertResults)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertResults>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:InsertResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:InsertResults)
    MergeFrom(*source);
  }
}

void InsertResults::MergeFrom(const InsertResults& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:InsertResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  results_.MergeFrom(from.results_);
}

void InsertResults::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:InsertResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertResults::CopyFrom(const InsertResults& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:InsertResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertResults::IsInitialized() const { return true; }

void InsertResults::Swap(InsertResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertResults::InternalSwap(InsertResults* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertResults::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void QueryRequest::InitAsDefaultInstance() {
  ::_QueryRequest_default_instance_._instance.get_mutable()->lset_ =
      const_cast<::Tags*>(::Tags::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRequest::kReturnMetricFieldNumber;
const int QueryRequest::kLsetFieldNumber;
const int QueryRequest::kMintFieldNumber;
const int QueryRequest::kMaxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRequest::QueryRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryRequest)
}
QueryRequest::QueryRequest(const QueryRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lset()) {
    lset_ = new ::Tags(*from.lset_);
  } else {
    lset_ = NULL;
  }
  ::memcpy(&mint_, &from.mint_,
           static_cast<size_t>(reinterpret_cast<char*>(&return_metric_) -
                               reinterpret_cast<char*>(&mint_)) +
               sizeof(return_metric_));
  // @@protoc_insertion_point(copy_constructor:QueryRequest)
}

void QueryRequest::SharedCtor() {
  ::memset(&lset_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&return_metric_) -
                               reinterpret_cast<char*>(&lset_)) +
               sizeof(return_metric_));
}

QueryRequest::~QueryRequest() {
  // @@protoc_insertion_point(destructor:QueryRequest)
  SharedDtor();
}

void QueryRequest::SharedDtor() {
  if (this != internal_default_instance()) delete lset_;
}

void QueryRequest::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* QueryRequest::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const QueryRequest& QueryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryRequest.base);
  return *internal_default_instance();
}

void QueryRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lset_ != NULL) {
    delete lset_;
  }
  lset_ = NULL;
  ::memset(&mint_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&return_metric_) -
                               reinterpret_cast<char*>(&mint_)) +
               sizeof(return_metric_));
  _internal_metadata_.Clear();
}

bool QueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool return_metric = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
              input, &return_metric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Tags lset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_lset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 mint = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int64,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
              input, &mint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 maxt = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int64,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
              input, &maxt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryRequest)
  return false;
#undef DO_
}

void QueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // bool return_metric = 1;
  if (this->return_metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
        1, this->return_metric(), output);
  }

  // .Tags lset = 2;
  if (this->has_lset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_lset(), output);
  }

  // int64 mint = 3;
  if (this->mint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->mint(),
                                                             output);
  }

  // int64 maxt = 4;
  if (this->maxt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->maxt(),
                                                             output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:QueryRequest)
}

::google::protobuf::uint8*
QueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // bool return_metric = 1;
  if (this->return_metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(
        1, this->return_metric(), target);
  }

  // .Tags lset = 2;
  if (this->has_lset()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(2, this->_internal_lset(), deterministic,
                                    target);
  }

  // int64 mint = 3;
  if (this->mint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(
        3, this->mint(), target);
  }

  // int64 maxt = 4;
  if (this->maxt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(
        4, this->maxt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryRequest)
  return target;
}

size_t QueryRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:QueryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // .Tags lset = 2;
  if (this->has_lset()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*lset_);
  }

  // int64 mint = 3;
  if (this->mint() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(
                          this->mint());
  }

  // int64 maxt = 4;
  if (this->maxt() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(
                          this->maxt());
  }

  // bool return_metric = 1;
  if (this->return_metric() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRequest>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryRequest)
    MergeFrom(*source);
  }
}

void QueryRequest::MergeFrom(const QueryRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:QueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_lset()) {
    mutable_lset()->::Tags::MergeFrom(from.lset());
  }
  if (from.mint() != 0) {
    set_mint(from.mint());
  }
  if (from.maxt() != 0) {
    set_maxt(from.maxt());
  }
  if (from.return_metric() != 0) {
    set_return_metric(from.return_metric());
  }
}

void QueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRequest::CopyFrom(const QueryRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:QueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRequest::IsInitialized() const { return true; }

void QueryRequest::Swap(QueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRequest::InternalSwap(QueryRequest* other) {
  using std::swap;
  swap(lset_, other->lset_);
  swap(mint_, other->mint_);
  swap(maxt_, other->maxt_);
  swap(return_metric_, other->return_metric_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryRequest::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void QuerySample::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuerySample::kTFieldNumber;
const int QuerySample::kVFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySample::QuerySample()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QuerySample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:QuerySample)
}
QuerySample::QuerySample(const QuerySample& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&t_, &from.t_,
           static_cast<size_t>(reinterpret_cast<char*>(&v_) -
                               reinterpret_cast<char*>(&t_)) +
               sizeof(v_));
  // @@protoc_insertion_point(copy_constructor:QuerySample)
}

void QuerySample::SharedCtor() {
  ::memset(&t_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&v_) -
                               reinterpret_cast<char*>(&t_)) +
               sizeof(v_));
}

QuerySample::~QuerySample() {
  // @@protoc_insertion_point(destructor:QuerySample)
  SharedDtor();
}

void QuerySample::SharedDtor() {}

void QuerySample::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* QuerySample::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const QuerySample& QuerySample::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QuerySample.base);
  return *internal_default_instance();
}

void QuerySample::Clear() {
  // @@protoc_insertion_point(message_clear_start:QuerySample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&t_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&v_) -
                               reinterpret_cast<char*>(&t_)) +
               sizeof(v_));
  _internal_metadata_.Clear();
}

bool QuerySample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QuerySample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 t = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int64,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(input,
                                                                         &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double v = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               double,
               ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
              input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QuerySample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QuerySample)
  return false;
#undef DO_
}

void QuerySample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QuerySample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 t = 1;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->t(),
                                                             output);
  }

  // double v = 2;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->v(),
                                                              output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:QuerySample)
}

::google::protobuf::uint8* QuerySample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QuerySample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 t = 1;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(
        1, this->t(), target);
  }

  // double v = 2;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(
        2, this->v(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QuerySample)
  return target;
}

size_t QuerySample::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:QuerySample)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // int64 t = 1;
  if (this->t() != 0) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->t());
  }

  // double v = 2;
  if (this->v() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuerySample::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:QuerySample)
  GOOGLE_DCHECK_NE(&from, this);
  const QuerySample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySample>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:QuerySample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:QuerySample)
    MergeFrom(*source);
  }
}

void QuerySample::MergeFrom(const QuerySample& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:QuerySample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.t() != 0) {
    set_t(from.t());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
}

void QuerySample::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:QuerySample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySample::CopyFrom(const QuerySample& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:QuerySample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySample::IsInitialized() const { return true; }

void QuerySample::Swap(QuerySample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySample::InternalSwap(QuerySample* other) {
  using std::swap;
  swap(t_, other->t_);
  swap(v_, other->v_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuerySample::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void QueryGroupSample::InitAsDefaultInstance() {
  ::_QueryGroupSample_default_instance_._instance.get_mutable()->metric_ =
      const_cast<::Tags*>(::Tags::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryGroupSample::kMetricFieldNumber;
const int QueryGroupSample::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryGroupSample::QueryGroupSample()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryGroupSample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryGroupSample)
}
QueryGroupSample::QueryGroupSample(const QueryGroupSample& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metric()) {
    metric_ = new ::Tags(*from.metric_);
  } else {
    metric_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:QueryGroupSample)
}

void QueryGroupSample::SharedCtor() { metric_ = NULL; }

QueryGroupSample::~QueryGroupSample() {
  // @@protoc_insertion_point(destructor:QueryGroupSample)
  SharedDtor();
}

void QueryGroupSample::SharedDtor() {
  if (this != internal_default_instance()) delete metric_;
}

void QueryGroupSample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryGroupSample::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const QueryGroupSample& QueryGroupSample::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryGroupSample.base);
  return *internal_default_instance();
}

void QueryGroupSample::Clear() {
  // @@protoc_insertion_point(message_clear_start:QueryGroupSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  values_.Clear();
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) {
    delete metric_;
  }
  metric_ = NULL;
  _internal_metadata_.Clear();
}

bool QueryGroupSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryGroupSample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Tags metric = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .QuerySample values = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryGroupSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryGroupSample)
  return false;
#undef DO_
}

void QueryGroupSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryGroupSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .Tags metric = 1;
  if (this->has_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_metric(), output);
  }

  // repeated .QuerySample values = 2;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->values_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->values(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:QueryGroupSample)
}

::google::protobuf::uint8*
QueryGroupSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryGroupSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .Tags metric = 1;
  if (this->has_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_metric(), deterministic,
                                    target);
  }

  // repeated .QuerySample values = 2;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->values_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(2, this->values(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryGroupSample)
  return target;
}

size_t QueryGroupSample::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:QueryGroupSample)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .QuerySample values = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // .Tags metric = 1;
  if (this->has_metric()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*metric_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryGroupSample::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:QueryGroupSample)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryGroupSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const QueryGroupSample>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryGroupSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryGroupSample)
    MergeFrom(*source);
  }
}

void QueryGroupSample::MergeFrom(const QueryGroupSample& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:QueryGroupSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.has_metric()) {
    mutable_metric()->::Tags::MergeFrom(from.metric());
  }
}

void QueryGroupSample::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:QueryGroupSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryGroupSample::CopyFrom(const QueryGroupSample& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:QueryGroupSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGroupSample::IsInitialized() const { return true; }

void QueryGroupSample::Swap(QueryGroupSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryGroupSample::InternalSwap(QueryGroupSample* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  swap(metric_, other->metric_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryGroupSample::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void QueryResult::InitAsDefaultInstance() {
  ::_QueryResult_default_instance_._instance.get_mutable()->metric_ =
      const_cast<::Tags*>(::Tags::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResult::kMetricFieldNumber;
const int QueryResult::kIdFieldNumber;
const int QueryResult::kValuesFieldNumber;
const int QueryResult::kSeriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResult::QueryResult()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryResult)
}
QueryResult::QueryResult(const QueryResult& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      series_(from.series_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_metric()) {
    metric_ = new ::Tags(*from.metric_);
  } else {
    metric_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:QueryResult)
}

void QueryResult::SharedCtor() {
  ::memset(&metric_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&id_) -
                               reinterpret_cast<char*>(&metric_)) +
               sizeof(id_));
}

QueryResult::~QueryResult() {
  // @@protoc_insertion_point(destructor:QueryResult)
  SharedDtor();
}

void QueryResult::SharedDtor() {
  if (this != internal_default_instance()) delete metric_;
}

void QueryResult::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* QueryResult::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const QueryResult& QueryResult::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryResult.base);
  return *internal_default_instance();
}

void QueryResult::Clear() {
  // @@protoc_insertion_point(message_clear_start:QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  values_.Clear();
  series_.Clear();
  if (GetArenaNoVirtual() == NULL && metric_ != NULL) {
    delete metric_;
  }
  metric_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool QueryResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Tags metric = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_metric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .QuerySample values = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .QueryGroupSample series = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_series()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryResult)
  return false;
#undef DO_
}

void QueryResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .Tags metric = 1;
  if (this->has_metric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_metric(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(),
                                                              output);
  }

  // repeated .QuerySample values = 3;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->values_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->values(static_cast<int>(i)), output);
  }

  // repeated .QueryGroupSample series = 4;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->series_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->series(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:QueryResult)
}

::google::protobuf::uint8* QueryResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .Tags metric = 1;
  if (this->has_metric()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_metric(), deterministic,
                                    target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        2, this->id(), target);
  }

  // repeated .QuerySample values = 3;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->values_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(3, this->values(static_cast<int>(i)),
                                    deterministic, target);
  }

  // repeated .QueryGroupSample series = 4;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->series_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(4, this->series(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryResult)
  return target;
}

size_t QueryResult::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:QueryResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .QuerySample values = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // repeated .QueryGroupSample series = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->series_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->series(static_cast<int>(i)));
    }
  }

  // .Tags metric = 1;
  if (this->has_metric()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*metric_);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResult::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResult>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryResult)
    MergeFrom(*source);
  }
}

void QueryResult::MergeFrom(const QueryResult& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:QueryResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  values_.MergeFrom(from.values_);
  series_.MergeFrom(from.series_);
  if (from.has_metric()) {
    mutable_metric()->::Tags::MergeFrom(from.metric());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void QueryResult::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResult::CopyFrom(const QueryResult& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:QueryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResult::IsInitialized() const { return true; }

void QueryResult::Swap(QueryResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResult::InternalSwap(QueryResult* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  CastToBase(&series_)->InternalSwap(CastToBase(&other->series_));
  swap(metric_, other->metric_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResult::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void QueryResults::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResults::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResults::QueryResults()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryResults.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryResults)
}
QueryResults::QueryResults(const QueryResults& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:QueryResults)
}

void QueryResults::SharedCtor() {}

QueryResults::~QueryResults() {
  // @@protoc_insertion_point(destructor:QueryResults)
  SharedDtor();
}

void QueryResults::SharedDtor() {}

void QueryResults::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* QueryResults::descriptor() {
  ::protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const QueryResults& QueryResults::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DB_2eproto::scc_info_QueryResults.base);
  return *internal_default_instance();
}

void QueryResults::Clear() {
  // @@protoc_insertion_point(message_clear_start:QueryResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryResults)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QueryResult results = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryResults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryResults)
  return false;
#undef DO_
}

void QueryResults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .QueryResult results = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->results_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:QueryResults)
}

::google::protobuf::uint8*
QueryResults::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryResults)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .QueryResult results = 1;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->results_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->results(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryResults)
  return target;
}

size_t QueryResults::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:QueryResults)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .QueryResult results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResults::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:QueryResults)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResults* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResults>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryResults)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryResults)
    MergeFrom(*source);
  }
}

void QueryResults::MergeFrom(const QueryResults& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:QueryResults)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  results_.MergeFrom(from.results_);
}

void QueryResults::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:QueryResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResults::CopyFrom(const QueryResults& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:QueryResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResults::IsInitialized() const { return true; }

void QueryResults::Swap(QueryResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResults::InternalSwap(QueryResults* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResults::GetMetadata() const {
  protobuf_DB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DB_2eproto::file_level_metadata[kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Tag* Arena::CreateMaybeMessage<::Tag>(
    Arena* arena) {
  return Arena::CreateInternal<::Tag>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Tags* Arena::CreateMaybeMessage<::Tags>(
    Arena* arena) {
  return Arena::CreateInternal<::Tags>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InsertSample*
Arena::CreateMaybeMessage<::InsertSample>(Arena* arena) {
  return Arena::CreateInternal<::InsertSample>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InsertSamples*
Arena::CreateMaybeMessage<::InsertSamples>(Arena* arena) {
  return Arena::CreateInternal<::InsertSamples>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InsertResult*
Arena::CreateMaybeMessage<::InsertResult>(Arena* arena) {
  return Arena::CreateInternal<::InsertResult>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::InsertResults*
Arena::CreateMaybeMessage<::InsertResults>(Arena* arena) {
  return Arena::CreateInternal<::InsertResults>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QueryRequest*
Arena::CreateMaybeMessage<::QueryRequest>(Arena* arena) {
  return Arena::CreateInternal<::QueryRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QuerySample*
Arena::CreateMaybeMessage<::QuerySample>(Arena* arena) {
  return Arena::CreateInternal<::QuerySample>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QueryGroupSample*
Arena::CreateMaybeMessage<::QueryGroupSample>(Arena* arena) {
  return Arena::CreateInternal<::QueryGroupSample>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QueryResult*
Arena::CreateMaybeMessage<::QueryResult>(Arena* arena) {
  return Arena::CreateInternal<::QueryResult>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::QueryResults*
Arena::CreateMaybeMessage<::QueryResults>(Arena* arena) {
  return Arena::CreateInternal<::QueryResults>(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
